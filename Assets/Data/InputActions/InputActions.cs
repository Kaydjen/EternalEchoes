//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Data/InputActions/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""FPV"",
            ""id"": ""85262d87-3cda-470a-a018-1482aea3fb96"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""b6fbca7c-5df6-49e1-ab63-6cd9ff80e54e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Value"",
                    ""id"": ""b5354137-79ca-4c0c-9f35-a9b5f9902918"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""990d2ea9-44b4-49d5-8414-9c3e5f1be62b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchCamera"",
                    ""type"": ""Button"",
                    ""id"": ""99e78472-ef1f-4a7f-91ad-91c1fe4e6260"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9cd723c6-abc0-4f07-970e-a1fc7698e9f9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1119038f-f069-4956-847f-786a56d8d9ee"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3a50e9ef-3bf0-44b8-af81-e1ec1dbf932b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f467084d-c68d-44ac-a7a6-d7b14854c0ef"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3663f57f-acdd-431d-a441-961e69f5c3dc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d7b7df75-8de8-46ce-9211-7dfa65845798"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67414e4d-eb6b-40df-b12e-da827f0e32f8"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13d36c30-9382-4f8c-a464-e825045f935d"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Top-Down"",
            ""id"": ""769e8037-b798-435a-9e1d-afde285c0a7b"",
            ""actions"": [
                {
                    ""name"": ""KeyboardCameraMovement"",
                    ""type"": ""Value"",
                    ""id"": ""cfab4d47-57f7-446d-ab31-df879ef9dd41"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScreenEdgePanning"",
                    ""type"": ""Value"",
                    ""id"": ""42149a0f-314e-4e42-b309-60a2008d51dd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ClickAndDrag"",
                    ""type"": ""Button"",
                    ""id"": ""29f399b9-f17d-4c25-ab35-ceb884774b63"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomCamera"",
                    ""type"": ""Value"",
                    ""id"": ""6c077486-98db-4dbf-b085-228ec429aa8e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""b6a00bf1-82a5-4add-a045-cc250d387aae"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchCamera"",
                    ""type"": ""Button"",
                    ""id"": ""f0a3cafc-2418-4885-a70a-af4882de117c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5d1080f0-1a61-4176-9bf6-e4603d3bd9ad"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardCameraMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""eabb9363-b8f9-4f6e-a7c1-1015d299bde3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardCameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e762a709-cd3a-48fa-bf9f-26b11ce7567d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardCameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d0f6aa15-98ca-4219-9328-23af5b9f1424"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardCameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f8d55e7e-dc00-4aa0-9952-3a40d1ef278b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardCameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""968bc627-58cd-42e6-8dfa-cf203c7aff30"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afc6d4e9-8d80-4dc1-89c4-26a59fbdc5fb"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c83bd80c-886b-4eb2-b8cb-57ac1cfc25bb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScreenEdgePanning"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c840c0d2-eee8-40be-a61d-af1717ec742c"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClickAndDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab5f341e-8257-42f1-ad4f-7e02047a2172"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Isometric"",
            ""id"": ""9e2e56e4-eb88-45b1-b3bd-1a160902f751"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""41c269c8-bb0c-4bff-bee5-923bdda2ce24"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""b6ea6928-f18f-4bc1-a6ce-c0fcdcf13ec9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""2e6b0af4-1b11-4cc4-8495-30271496bb72"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchCamera"",
                    ""type"": ""Button"",
                    ""id"": ""a96743d7-b5bf-4e14-9a99-88c73b0f9ba6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""79a27341-391f-4cb3-9539-492631ca0c28"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7ac9156e-d2fd-40ea-a517-e2d56559cf27"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b32d4dfc-791c-458f-aa08-e65a86f97146"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""45fcad4a-e572-4add-9cd3-1503d44e2067"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""886078ba-cb4c-4921-889d-7b03fbf4d197"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""12da11d6-6c20-4246-9b4e-4b3a1b328fc4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35be2daf-3671-477e-88c1-7d63acc7e65a"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9036dd3-ae9f-4c19-99de-ca39583d7a80"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FPV
        m_FPV = asset.FindActionMap("FPV", throwIfNotFound: true);
        m_FPV_Movement = m_FPV.FindAction("Movement", throwIfNotFound: true);
        m_FPV_RotateCamera = m_FPV.FindAction("RotateCamera", throwIfNotFound: true);
        m_FPV_Interaction = m_FPV.FindAction("Interaction", throwIfNotFound: true);
        m_FPV_SwitchCamera = m_FPV.FindAction("SwitchCamera", throwIfNotFound: true);
        // Top-Down
        m_TopDown = asset.FindActionMap("Top-Down", throwIfNotFound: true);
        m_TopDown_KeyboardCameraMovement = m_TopDown.FindAction("KeyboardCameraMovement", throwIfNotFound: true);
        m_TopDown_ScreenEdgePanning = m_TopDown.FindAction("ScreenEdgePanning", throwIfNotFound: true);
        m_TopDown_ClickAndDrag = m_TopDown.FindAction("ClickAndDrag", throwIfNotFound: true);
        m_TopDown_ZoomCamera = m_TopDown.FindAction("ZoomCamera", throwIfNotFound: true);
        m_TopDown_Interaction = m_TopDown.FindAction("Interaction", throwIfNotFound: true);
        m_TopDown_SwitchCamera = m_TopDown.FindAction("SwitchCamera", throwIfNotFound: true);
        // Isometric
        m_Isometric = asset.FindActionMap("Isometric", throwIfNotFound: true);
        m_Isometric_Movement = m_Isometric.FindAction("Movement", throwIfNotFound: true);
        m_Isometric_Mouse = m_Isometric.FindAction("Mouse", throwIfNotFound: true);
        m_Isometric_Interaction = m_Isometric.FindAction("Interaction", throwIfNotFound: true);
        m_Isometric_SwitchCamera = m_Isometric.FindAction("SwitchCamera", throwIfNotFound: true);
    }

    ~@InputActions()
    {
        UnityEngine.Debug.Assert(!m_FPV.enabled, "This will cause a leak and performance issues, InputActions.FPV.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_TopDown.enabled, "This will cause a leak and performance issues, InputActions.TopDown.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Isometric.enabled, "This will cause a leak and performance issues, InputActions.Isometric.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FPV
    private readonly InputActionMap m_FPV;
    private List<IFPVActions> m_FPVActionsCallbackInterfaces = new List<IFPVActions>();
    private readonly InputAction m_FPV_Movement;
    private readonly InputAction m_FPV_RotateCamera;
    private readonly InputAction m_FPV_Interaction;
    private readonly InputAction m_FPV_SwitchCamera;
    public struct FPVActions
    {
        private @InputActions m_Wrapper;
        public FPVActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_FPV_Movement;
        public InputAction @RotateCamera => m_Wrapper.m_FPV_RotateCamera;
        public InputAction @Interaction => m_Wrapper.m_FPV_Interaction;
        public InputAction @SwitchCamera => m_Wrapper.m_FPV_SwitchCamera;
        public InputActionMap Get() { return m_Wrapper.m_FPV; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FPVActions set) { return set.Get(); }
        public void AddCallbacks(IFPVActions instance)
        {
            if (instance == null || m_Wrapper.m_FPVActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_FPVActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @RotateCamera.started += instance.OnRotateCamera;
            @RotateCamera.performed += instance.OnRotateCamera;
            @RotateCamera.canceled += instance.OnRotateCamera;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @SwitchCamera.started += instance.OnSwitchCamera;
            @SwitchCamera.performed += instance.OnSwitchCamera;
            @SwitchCamera.canceled += instance.OnSwitchCamera;
        }

        private void UnregisterCallbacks(IFPVActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @RotateCamera.started -= instance.OnRotateCamera;
            @RotateCamera.performed -= instance.OnRotateCamera;
            @RotateCamera.canceled -= instance.OnRotateCamera;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @SwitchCamera.started -= instance.OnSwitchCamera;
            @SwitchCamera.performed -= instance.OnSwitchCamera;
            @SwitchCamera.canceled -= instance.OnSwitchCamera;
        }

        public void RemoveCallbacks(IFPVActions instance)
        {
            if (m_Wrapper.m_FPVActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IFPVActions instance)
        {
            foreach (var item in m_Wrapper.m_FPVActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_FPVActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public FPVActions @FPV => new FPVActions(this);

    // Top-Down
    private readonly InputActionMap m_TopDown;
    private List<ITopDownActions> m_TopDownActionsCallbackInterfaces = new List<ITopDownActions>();
    private readonly InputAction m_TopDown_KeyboardCameraMovement;
    private readonly InputAction m_TopDown_ScreenEdgePanning;
    private readonly InputAction m_TopDown_ClickAndDrag;
    private readonly InputAction m_TopDown_ZoomCamera;
    private readonly InputAction m_TopDown_Interaction;
    private readonly InputAction m_TopDown_SwitchCamera;
    public struct TopDownActions
    {
        private @InputActions m_Wrapper;
        public TopDownActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @KeyboardCameraMovement => m_Wrapper.m_TopDown_KeyboardCameraMovement;
        public InputAction @ScreenEdgePanning => m_Wrapper.m_TopDown_ScreenEdgePanning;
        public InputAction @ClickAndDrag => m_Wrapper.m_TopDown_ClickAndDrag;
        public InputAction @ZoomCamera => m_Wrapper.m_TopDown_ZoomCamera;
        public InputAction @Interaction => m_Wrapper.m_TopDown_Interaction;
        public InputAction @SwitchCamera => m_Wrapper.m_TopDown_SwitchCamera;
        public InputActionMap Get() { return m_Wrapper.m_TopDown; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TopDownActions set) { return set.Get(); }
        public void AddCallbacks(ITopDownActions instance)
        {
            if (instance == null || m_Wrapper.m_TopDownActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TopDownActionsCallbackInterfaces.Add(instance);
            @KeyboardCameraMovement.started += instance.OnKeyboardCameraMovement;
            @KeyboardCameraMovement.performed += instance.OnKeyboardCameraMovement;
            @KeyboardCameraMovement.canceled += instance.OnKeyboardCameraMovement;
            @ScreenEdgePanning.started += instance.OnScreenEdgePanning;
            @ScreenEdgePanning.performed += instance.OnScreenEdgePanning;
            @ScreenEdgePanning.canceled += instance.OnScreenEdgePanning;
            @ClickAndDrag.started += instance.OnClickAndDrag;
            @ClickAndDrag.performed += instance.OnClickAndDrag;
            @ClickAndDrag.canceled += instance.OnClickAndDrag;
            @ZoomCamera.started += instance.OnZoomCamera;
            @ZoomCamera.performed += instance.OnZoomCamera;
            @ZoomCamera.canceled += instance.OnZoomCamera;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @SwitchCamera.started += instance.OnSwitchCamera;
            @SwitchCamera.performed += instance.OnSwitchCamera;
            @SwitchCamera.canceled += instance.OnSwitchCamera;
        }

        private void UnregisterCallbacks(ITopDownActions instance)
        {
            @KeyboardCameraMovement.started -= instance.OnKeyboardCameraMovement;
            @KeyboardCameraMovement.performed -= instance.OnKeyboardCameraMovement;
            @KeyboardCameraMovement.canceled -= instance.OnKeyboardCameraMovement;
            @ScreenEdgePanning.started -= instance.OnScreenEdgePanning;
            @ScreenEdgePanning.performed -= instance.OnScreenEdgePanning;
            @ScreenEdgePanning.canceled -= instance.OnScreenEdgePanning;
            @ClickAndDrag.started -= instance.OnClickAndDrag;
            @ClickAndDrag.performed -= instance.OnClickAndDrag;
            @ClickAndDrag.canceled -= instance.OnClickAndDrag;
            @ZoomCamera.started -= instance.OnZoomCamera;
            @ZoomCamera.performed -= instance.OnZoomCamera;
            @ZoomCamera.canceled -= instance.OnZoomCamera;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @SwitchCamera.started -= instance.OnSwitchCamera;
            @SwitchCamera.performed -= instance.OnSwitchCamera;
            @SwitchCamera.canceled -= instance.OnSwitchCamera;
        }

        public void RemoveCallbacks(ITopDownActions instance)
        {
            if (m_Wrapper.m_TopDownActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITopDownActions instance)
        {
            foreach (var item in m_Wrapper.m_TopDownActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TopDownActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TopDownActions @TopDown => new TopDownActions(this);

    // Isometric
    private readonly InputActionMap m_Isometric;
    private List<IIsometricActions> m_IsometricActionsCallbackInterfaces = new List<IIsometricActions>();
    private readonly InputAction m_Isometric_Movement;
    private readonly InputAction m_Isometric_Mouse;
    private readonly InputAction m_Isometric_Interaction;
    private readonly InputAction m_Isometric_SwitchCamera;
    public struct IsometricActions
    {
        private @InputActions m_Wrapper;
        public IsometricActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Isometric_Movement;
        public InputAction @Mouse => m_Wrapper.m_Isometric_Mouse;
        public InputAction @Interaction => m_Wrapper.m_Isometric_Interaction;
        public InputAction @SwitchCamera => m_Wrapper.m_Isometric_SwitchCamera;
        public InputActionMap Get() { return m_Wrapper.m_Isometric; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(IsometricActions set) { return set.Get(); }
        public void AddCallbacks(IIsometricActions instance)
        {
            if (instance == null || m_Wrapper.m_IsometricActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_IsometricActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Mouse.started += instance.OnMouse;
            @Mouse.performed += instance.OnMouse;
            @Mouse.canceled += instance.OnMouse;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @SwitchCamera.started += instance.OnSwitchCamera;
            @SwitchCamera.performed += instance.OnSwitchCamera;
            @SwitchCamera.canceled += instance.OnSwitchCamera;
        }

        private void UnregisterCallbacks(IIsometricActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Mouse.started -= instance.OnMouse;
            @Mouse.performed -= instance.OnMouse;
            @Mouse.canceled -= instance.OnMouse;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @SwitchCamera.started -= instance.OnSwitchCamera;
            @SwitchCamera.performed -= instance.OnSwitchCamera;
            @SwitchCamera.canceled -= instance.OnSwitchCamera;
        }

        public void RemoveCallbacks(IIsometricActions instance)
        {
            if (m_Wrapper.m_IsometricActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IIsometricActions instance)
        {
            foreach (var item in m_Wrapper.m_IsometricActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_IsometricActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public IsometricActions @Isometric => new IsometricActions(this);
    public interface IFPVActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRotateCamera(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnSwitchCamera(InputAction.CallbackContext context);
    }
    public interface ITopDownActions
    {
        void OnKeyboardCameraMovement(InputAction.CallbackContext context);
        void OnScreenEdgePanning(InputAction.CallbackContext context);
        void OnClickAndDrag(InputAction.CallbackContext context);
        void OnZoomCamera(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnSwitchCamera(InputAction.CallbackContext context);
    }
    public interface IIsometricActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnSwitchCamera(InputAction.CallbackContext context);
    }
}
